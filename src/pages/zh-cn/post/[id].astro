---
import DynamicPostLayout from '@layouts/DynamicPostLayout.astro'

import { queryPostsFromIssues } from '@services'

import type { IssueContent } from '@services/interface'

type ExtraData = {
  prev: { number: number; title: string } | null
  next: { number: number; title: string } | null
}

export async function getStaticPaths() {
  const { repository } = await queryPostsFromIssues({ withContent: true })
  const { issues } = repository
  const { nodes } = issues
  return nodes.map((node, index) => {
    const prev = nodes[index - 1]
    const next = nodes[index + 1]

    return {
      params: {
        id: node.number.toString(),
      },
      props: {
        ...node,
        prev: prev ? { number: prev.number, title: prev.title } : null,
        next: next ? { number: next.number, title: next.title } : null,
      },
    }
  })
}

const {
  number,
  title,
  body = '',
  labels,
  createdAt,
  url,
  // prev,
  // next,
} = Astro.props as IssueContent & ExtraData

const props = { number, title, labels, url, body, createdAt }
---

<DynamicPostLayout {...props} />
